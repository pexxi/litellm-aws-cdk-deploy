// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LiteLLM CDK App Snapshot Test App synthesizes the stack correctly 1`] = `
{
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x",
      },
      "ap-east-1": {
        "value": "nodejs20.x",
      },
      "ap-east-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-3": {
        "value": "nodejs20.x",
      },
      "ap-south-1": {
        "value": "nodejs20.x",
      },
      "ap-south-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-1": {
        "value": "nodejs20.x",
      },
      "ap-southeast-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-3": {
        "value": "nodejs20.x",
      },
      "ap-southeast-4": {
        "value": "nodejs20.x",
      },
      "ap-southeast-5": {
        "value": "nodejs20.x",
      },
      "ap-southeast-7": {
        "value": "nodejs20.x",
      },
      "ca-central-1": {
        "value": "nodejs20.x",
      },
      "ca-west-1": {
        "value": "nodejs20.x",
      },
      "cn-north-1": {
        "value": "nodejs20.x",
      },
      "cn-northwest-1": {
        "value": "nodejs20.x",
      },
      "eu-central-1": {
        "value": "nodejs20.x",
      },
      "eu-central-2": {
        "value": "nodejs20.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs20.x",
      },
      "eu-south-1": {
        "value": "nodejs20.x",
      },
      "eu-south-2": {
        "value": "nodejs20.x",
      },
      "eu-west-1": {
        "value": "nodejs20.x",
      },
      "eu-west-2": {
        "value": "nodejs20.x",
      },
      "eu-west-3": {
        "value": "nodejs20.x",
      },
      "il-central-1": {
        "value": "nodejs20.x",
      },
      "me-central-1": {
        "value": "nodejs20.x",
      },
      "me-south-1": {
        "value": "nodejs20.x",
      },
      "mx-central-1": {
        "value": "nodejs20.x",
      },
      "sa-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-2": {
        "value": "nodejs20.x",
      },
      "us-gov-east-1": {
        "value": "nodejs20.x",
      },
      "us-gov-west-1": {
        "value": "nodejs20.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-isob-west-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs20.x",
      },
      "us-west-2": {
        "value": "nodejs20.x",
      },
    },
  },
  "Outputs": {
    "ApiSecretsSecretARN": {
      "Description": "ARN of the API secrets secret in Secrets Manager",
      "Value": {
        "Ref": "ConfigLiteLLMApiSecretsAF25951D",
      },
    },
    "ConfigBucketName": {
      "Description": "Name of the S3 bucket storing the LiteLLM config",
      "Value": {
        "Ref": "ConfigLiteLLMS3BucketEA3DF0D5",
      },
    },
    "DatabaseSecretARN": {
      "Description": "ARN of the database credentials secret in Secrets Manager",
      "Value": {
        "Ref": "DatabaseDBSecretD08C53F5",
      },
    },
    "LiteLLMProxyServiceLoadBalancerDNS496A4B7D": {
      "Value": {
        "Fn::GetAtt": [
          "LiteLLMProxyServiceLBA4EFC468",
          "DNSName",
        ],
      },
    },
    "LiteLLMProxyServiceServiceURL878AF72F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "LiteLLMProxyServiceLBA4EFC468",
                "DNSName",
              ],
            },
          ],
        ],
      },
    },
    "LoadBalancerDNS": {
      "Description": "DNS name of the Application Load Balancer",
      "Value": {
        "Fn::GetAtt": [
          "LiteLLMProxyServiceLBA4EFC468",
          "DNSName",
        ],
      },
    },
    "MasterKeySecretARN": {
      "Description": "ARN of the Master Key secret in Secrets Manager",
      "Value": {
        "Ref": "ConfigLiteLLMMasterKey6B86424B",
      },
    },
    "UISecretARN": {
      "Description": "ARN of the UI password secret in Secrets Manager",
      "Value": {
        "Ref": "ConfigLiteLLMUI21AF3C3B",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ConfigLiteLLMApiSecretsAF25951D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": "Secret for LiteLLM API",
        "SecretString": "{"AZURE_API_KEY":"placeholder","OPENAI_API_KEY":"placeholder","ANTHROPIC_API_KEY":"placeholder","GROQ_API_KEY":"placeholder"}",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "ConfigLiteLLMKey0681B16A": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": "KMS key for LiteLLM resources",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": {
                    "Fn::Join": [
                      "",
                      [
                        "secretsmanager.",
                        {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:CreateGrant",
                "kms:DescribeKey",
              ],
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": {
                    "Fn::Join": [
                      "",
                      [
                        "secretsmanager.",
                        {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": "kms:Decrypt",
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": {
                    "Fn::Join": [
                      "",
                      [
                        "secretsmanager.",
                        {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "LiteLLMProxyServiceTaskDefExecutionRole6ABAB6F4",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": "kms:Decrypt",
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": {
                    "Fn::Join": [
                      "",
                      [
                        "secretsmanager.",
                        {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "LiteLLMProxyServiceTaskDefTaskRole70D354A1",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "ConfigLiteLLMMasterKey6B86424B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": "Secret for LiteLLM Master Key",
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
          "PasswordLength": 32,
        },
        "KmsKeyId": {
          "Fn::GetAtt": [
            "ConfigLiteLLMKey0681B16A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "ConfigLiteLLMS3BucketAutoDeleteObjectsCustomResourceD7D02304": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "ConfigLiteLLMS3BucketPolicyAA982B17",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "ConfigLiteLLMS3BucketEA3DF0D5",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "ConfigLiteLLMS3BucketEA3DF0D5": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "ConfigLiteLLMKey0681B16A",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          {
            "Key": "aws-cdk:cr-owned:config:6c3d8233",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "ConfigLiteLLMS3BucketPolicyAA982B17": {
      "Properties": {
        "Bucket": {
          "Ref": "ConfigLiteLLMS3BucketEA3DF0D5",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ConfigLiteLLMS3BucketEA3DF0D5",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ConfigLiteLLMS3BucketEA3DF0D5",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ConfigLiteLLMS3BucketEA3DF0D5",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ConfigLiteLLMS3BucketEA3DF0D5",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "ConfigLiteLLMS3ConfigFileDeploymentAwsCliLayer3521C228": {
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "12157b27d30ab71eb24ae65825f672ba5cc2c09dbb1703cd7adfcff3aeaca136.zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "ConfigLiteLLMS3ConfigFileDeploymentCustomResource256MiBD42A65BE": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DestinationBucketKeyPrefix": "config",
        "DestinationBucketName": {
          "Ref": "ConfigLiteLLMS3BucketEA3DF0D5",
        },
        "OutputObjectKeys": true,
        "Prune": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C256MiB5F7BD223",
            "Arn",
          ],
        },
        "SourceBucketNames": [
          {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
        ],
        "SourceObjectKeys": [
          "0d90d8731c7367ce61437ed74b26a511bec44ac9572fe96d7608eabf4eea8fa5.zip",
        ],
        "SystemMetadata": {
          "content-type": "application/yaml",
        },
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "ConfigLiteLLMUI21AF3C3B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": "Secret for LiteLLM UI",
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
          "PasswordLength": 32,
        },
        "KmsKeyId": {
          "Fn::GetAtt": [
            "ConfigLiteLLMKey0681B16A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C256MiB5F7BD223": {
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C256MiBServiceRoleDefaultPolicyE5468F0E",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C256MiBServiceRoleF991ED9F",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "9a1fcb4a7ecba81ad70e9d3fb241f6794497da945dae5f25924e4dd002b65f2d.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem",
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "ConfigLiteLLMS3ConfigFileDeploymentAwsCliLayer3521C228",
          },
        ],
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C256MiBServiceRoleF991ED9F",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C256MiBServiceRoleDefaultPolicyE5468F0E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ConfigLiteLLMS3BucketEA3DF0D5",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ConfigLiteLLMS3BucketEA3DF0D5",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ConfigLiteLLMKey0681B16A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C256MiBServiceRoleDefaultPolicyE5468F0E",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C256MiBServiceRoleF991ED9F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C256MiBServiceRoleF991ED9F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "ConfigLiteLLMS3BucketEA3DF0D5",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DatabaseDBB23F3D83": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AllocatedStorage": "20",
        "BackupRetentionPeriod": 7,
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t3.micro",
        "DBName": "litellm",
        "DBSubnetGroupName": {
          "Ref": "DatabaseDBSubnetGroup1E67AC58",
        },
        "DeletionProtection": false,
        "Engine": "postgres",
        "EngineVersion": "16.8",
        "KmsKeyId": {
          "Fn::GetAtt": [
            "ConfigLiteLLMKey0681B16A",
            "Arn",
          ],
        },
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "DatabaseDBSecretD08C53F5",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "DatabaseDBSecretD08C53F5",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "MaxAllocatedStorage": 100,
        "PreferredBackupWindow": "03:00-04:00",
        "PubliclyAccessible": false,
        "StorageEncrypted": true,
        "StorageType": "gp2",
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "DatabaseDatabaseSecurityGroupDBE5AB2F",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseDBSecretAttachmentBFA793C0": {
      "Properties": {
        "SecretId": {
          "Ref": "DatabaseDBSecretD08C53F5",
        },
        "TargetId": {
          "Ref": "DatabaseDBB23F3D83",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "DatabaseDBSecretD08C53F5": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Generated by the CDK for stack: ",
              {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{"username":"postgres"}",
        },
        "Name": "litellm-db-credentials",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseDBSubnetGroup1E67AC58": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group for DB database",
        "SubnetIds": [
          {
            "Ref": "VPCdatabaseSubnet1Subnet928B0E0B",
          },
          {
            "Ref": "VPCdatabaseSubnet2Subnet7E0E50B1",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "DatabaseDatabaseSecurityGroupDBE5AB2F": {
      "Properties": {
        "GroupDescription": "Security group for LiteLLM database",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DatabaseDatabaseSecurityGroupfromTestAppStackLiteLLMProxyServiceSecurityGroupBD355739IndirectPort3C97FBAA": {
      "Properties": {
        "Description": "Allow access to database",
        "FromPort": {
          "Fn::GetAtt": [
            "DatabaseDBB23F3D83",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "DatabaseDatabaseSecurityGroupDBE5AB2F",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LiteLLMProxyServiceSecurityGroupAE11B60D",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "DatabaseDBB23F3D83",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "EcsDefaultClusterMnL3mNNYNVPC9C1EC7A3": {
      "Type": "AWS::ECS::Cluster",
    },
    "LiteLLMProxyService86C3A4FF": {
      "DependsOn": [
        "LiteLLMProxyServiceLBPublicListenerECSGroup24454D0A",
        "LiteLLMProxyServiceLBPublicListener685AC3CD",
        "LiteLLMProxyServiceTaskDefTaskRoleDefaultPolicy0674C44C",
        "LiteLLMProxyServiceTaskDefTaskRole70D354A1",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "EcsDefaultClusterMnL3mNNYNVPC9C1EC7A3",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "DeploymentCircuitBreaker": {
            "Enable": false,
            "Rollback": true,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DeploymentController": {
          "Type": "ECS",
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "web",
            "ContainerPort": 4000,
            "TargetGroupArn": {
              "Ref": "LiteLLMProxyServiceLBPublicListenerECSGroup24454D0A",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "LiteLLMProxyServiceSecurityGroupAE11B60D",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VPCapplicationSubnet1SubnetFE5BD7C4",
              },
              {
                "Ref": "VPCapplicationSubnet2Subnet9AE2E808",
              },
            ],
          },
        },
        "PlatformVersion": "LATEST",
        "TaskDefinition": {
          "Ref": "LiteLLMProxyServiceTaskDef1400F170",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "LiteLLMProxyServiceLBA4EFC468": {
      "DependsOn": [
        "VPCingressSubnet1DefaultRouteC1C9D77C",
        "VPCingressSubnet1RouteTableAssociation7700457B",
        "VPCingressSubnet2DefaultRoute8E2F45A7",
        "VPCingressSubnet2RouteTableAssociation35C35494",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "LiteLLMProxyServiceLBSecurityGroupEC688B8D",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "VPCingressSubnet1SubnetBB7FDF67",
          },
          {
            "Ref": "VPCingressSubnet2SubnetE30F0091",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LiteLLMProxyServiceLBPublicListener685AC3CD": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "LiteLLMProxyServiceLBPublicListenerECSGroup24454D0A",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "LiteLLMProxyServiceLBA4EFC468",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LiteLLMProxyServiceLBPublicListenerECSGroup24454D0A": {
      "Properties": {
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckPath": "/health/readiness",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "UnhealthyThresholdCount": 3,
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "LiteLLMProxyServiceLBSecurityGroupEC688B8D": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB TestAppStackLiteLLMProxyServiceLB726578EB",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LiteLLMProxyServiceLBSecurityGrouptoTestAppStackLiteLLMProxyServiceSecurityGroupBD355739400076BDC1E1": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "LiteLLMProxyServiceSecurityGroupAE11B60D",
            "GroupId",
          ],
        },
        "FromPort": 4000,
        "GroupId": {
          "Fn::GetAtt": [
            "LiteLLMProxyServiceLBSecurityGroupEC688B8D",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 4000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "LiteLLMProxyServiceSecurityGroupAE11B60D": {
      "DependsOn": [
        "LiteLLMProxyServiceTaskDefTaskRoleDefaultPolicy0674C44C",
        "LiteLLMProxyServiceTaskDefTaskRole70D354A1",
      ],
      "Properties": {
        "GroupDescription": "TestAppStack/LiteLLMProxy/Service/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LiteLLMProxyServiceSecurityGroupfromTestAppStackLiteLLMProxyServiceLBSecurityGroup7323E0104000B8187D78": {
      "DependsOn": [
        "LiteLLMProxyServiceTaskDefTaskRoleDefaultPolicy0674C44C",
        "LiteLLMProxyServiceTaskDefTaskRole70D354A1",
      ],
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 4000,
        "GroupId": {
          "Fn::GetAtt": [
            "LiteLLMProxyServiceSecurityGroupAE11B60D",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LiteLLMProxyServiceLBSecurityGroupEC688B8D",
            "GroupId",
          ],
        },
        "ToPort": 4000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "LiteLLMProxyServiceTaskDef1400F170": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "UI_USERNAME",
                "Value": "admin",
              },
              {
                "Name": "LITELLM_CONFIG_BUCKET_NAME",
                "Value": {
                  "Ref": "ConfigLiteLLMS3BucketEA3DF0D5",
                },
              },
              {
                "Name": "LITELLM_CONFIG_BUCKET_OBJECT_KEY",
                "Value": "config/config.yaml",
              },
              {
                "Name": "DATABASE_URL",
                "Value": {
                  "Fn::Join": [
                    "",
                    [
                      "postgresql://{{resolve:secretsmanager:",
                      {
                        "Ref": "DatabaseDBSecretD08C53F5",
                      },
                      ":SecretString:username::}}:{{resolve:secretsmanager:",
                      {
                        "Ref": "DatabaseDBSecretD08C53F5",
                      },
                      ":SecretString:password::}}@",
                      {
                        "Fn::GetAtt": [
                          "DatabaseDBB23F3D83",
                          "Endpoint.Address",
                        ],
                      },
                      ":",
                      {
                        "Fn::GetAtt": [
                          "DatabaseDBB23F3D83",
                          "Endpoint.Port",
                        ],
                      },
                      "/litellm",
                    ],
                  ],
                },
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/berriai/litellm:main-stable",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "LiteLLMProxyServiceTaskDefwebLogGroup0760464D",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "LiteLLMProxy",
              },
            },
            "Name": "web",
            "PortMappings": [
              {
                "ContainerPort": 4000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": [
              {
                "Name": "UI_PASSWORD",
                "ValueFrom": {
                  "Ref": "ConfigLiteLLMUI21AF3C3B",
                },
              },
              {
                "Name": "LITELLM_MASTER_KEY",
                "ValueFrom": {
                  "Ref": "ConfigLiteLLMMasterKey6B86424B",
                },
              },
              {
                "Name": "AZURE_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "ConfigLiteLLMApiSecretsAF25951D",
                      },
                      ":AZURE_API_KEY::",
                    ],
                  ],
                },
              },
              {
                "Name": "OPENAI_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "ConfigLiteLLMApiSecretsAF25951D",
                      },
                      ":OPENAI_API_KEY::",
                    ],
                  ],
                },
              },
              {
                "Name": "ANTHROPIC_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "ConfigLiteLLMApiSecretsAF25951D",
                      },
                      ":ANTHROPIC_API_KEY::",
                    ],
                  ],
                },
              },
              {
                "Name": "GROQ_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "ConfigLiteLLMApiSecretsAF25951D",
                      },
                      ":GROQ_API_KEY::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "LiteLLMProxyServiceTaskDefExecutionRole6ABAB6F4",
            "Arn",
          ],
        },
        "Family": "TestAppStackLiteLLMProxyServiceTaskDefF2289F2E",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "RuntimePlatform": {
          "CpuArchitecture": "ARM64",
          "OperatingSystemFamily": "LINUX",
        },
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "LiteLLMProxyServiceTaskDefTaskRole70D354A1",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "LiteLLMProxyServiceTaskDefExecutionRole6ABAB6F4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "LiteLLMProxyServiceTaskDefExecutionRoleDefaultPolicyD0D5E018": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LiteLLMProxyServiceTaskDefwebLogGroup0760464D",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "ConfigLiteLLMUI21AF3C3B",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "ConfigLiteLLMMasterKey6B86424B",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "ConfigLiteLLMApiSecretsAF25951D",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LiteLLMProxyServiceTaskDefExecutionRoleDefaultPolicyD0D5E018",
        "Roles": [
          {
            "Ref": "LiteLLMProxyServiceTaskDefExecutionRole6ABAB6F4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LiteLLMProxyServiceTaskDefTaskRole70D354A1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "LiteLLMProxyServiceTaskDefTaskRoleDefaultPolicy0674C44C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ConfigLiteLLMS3BucketEA3DF0D5",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ConfigLiteLLMS3BucketEA3DF0D5",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ConfigLiteLLMKey0681B16A",
                  "Arn",
                ],
              },
            },
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ConfigLiteLLMKey0681B16A",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "ConfigLiteLLMUI21AF3C3B",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "ConfigLiteLLMMasterKey6B86424B",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "ConfigLiteLLMApiSecretsAF25951D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "DatabaseDBSecretD08C53F5",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LiteLLMProxyServiceTaskDefTaskRoleDefaultPolicy0674C44C",
        "Roles": [
          {
            "Ref": "LiteLLMProxyServiceTaskDefTaskRole70D354A1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LiteLLMProxyServiceTaskDefwebLogGroup0760464D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "VPCB9E5F0B4": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestAppStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestAppStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCVPCGW99B986DC": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "VPCapplicationSubnet1DefaultRouteDDC3EE0F": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCingressSubnet1NATGateway06A5D97E",
        },
        "RouteTableId": {
          "Ref": "VPCapplicationSubnet1RouteTable06DA588A",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCapplicationSubnet1RouteTable06DA588A": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestAppStack/VPC/applicationSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCapplicationSubnet1RouteTableAssociationBD8DBEDA": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCapplicationSubnet1RouteTable06DA588A",
        },
        "SubnetId": {
          "Ref": "VPCapplicationSubnet1SubnetFE5BD7C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCapplicationSubnet1SubnetFE5BD7C4": {
      "Properties": {
        "AvailabilityZone": "eu-north-1a",
        "CidrBlock": "10.0.2.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "application",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "TestAppStack/VPC/applicationSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCapplicationSubnet2DefaultRouteBFF28947": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCingressSubnet1NATGateway06A5D97E",
        },
        "RouteTableId": {
          "Ref": "VPCapplicationSubnet2RouteTableBE360162",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCapplicationSubnet2RouteTableAssociationB08E8C3F": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCapplicationSubnet2RouteTableBE360162",
        },
        "SubnetId": {
          "Ref": "VPCapplicationSubnet2Subnet9AE2E808",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCapplicationSubnet2RouteTableBE360162": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestAppStack/VPC/applicationSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCapplicationSubnet2Subnet9AE2E808": {
      "Properties": {
        "AvailabilityZone": "eu-north-1b",
        "CidrBlock": "10.0.3.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "application",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "TestAppStack/VPC/applicationSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCdatabaseSubnet1RouteTable4FCC2480": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestAppStack/VPC/databaseSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCdatabaseSubnet1RouteTableAssociation2E8D61AA": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCdatabaseSubnet1RouteTable4FCC2480",
        },
        "SubnetId": {
          "Ref": "VPCdatabaseSubnet1Subnet928B0E0B",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCdatabaseSubnet1Subnet928B0E0B": {
      "Properties": {
        "AvailabilityZone": "eu-north-1a",
        "CidrBlock": "10.0.4.0/28",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "database",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "TestAppStack/VPC/databaseSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCdatabaseSubnet2RouteTable493F7B3C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestAppStack/VPC/databaseSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCdatabaseSubnet2RouteTableAssociation3C3B7856": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCdatabaseSubnet2RouteTable493F7B3C",
        },
        "SubnetId": {
          "Ref": "VPCdatabaseSubnet2Subnet7E0E50B1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCdatabaseSubnet2Subnet7E0E50B1": {
      "Properties": {
        "AvailabilityZone": "eu-north-1b",
        "CidrBlock": "10.0.4.16/28",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "database",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "TestAppStack/VPC/databaseSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCingressSubnet1DefaultRouteC1C9D77C": {
      "DependsOn": [
        "VPCVPCGW99B986DC",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": {
          "Ref": "VPCingressSubnet1RouteTableEEF02A64",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCingressSubnet1EIP46E19D36": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestAppStack/VPC/ingressSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCingressSubnet1NATGateway06A5D97E": {
      "DependsOn": [
        "VPCingressSubnet1DefaultRouteC1C9D77C",
        "VPCingressSubnet1RouteTableAssociation7700457B",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCingressSubnet1EIP46E19D36",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VPCingressSubnet1SubnetBB7FDF67",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestAppStack/VPC/ingressSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCingressSubnet1RouteTableAssociation7700457B": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCingressSubnet1RouteTableEEF02A64",
        },
        "SubnetId": {
          "Ref": "VPCingressSubnet1SubnetBB7FDF67",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCingressSubnet1RouteTableEEF02A64": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestAppStack/VPC/ingressSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCingressSubnet1SubnetBB7FDF67": {
      "Properties": {
        "AvailabilityZone": "eu-north-1a",
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "ingress",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "TestAppStack/VPC/ingressSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCingressSubnet2DefaultRoute8E2F45A7": {
      "DependsOn": [
        "VPCVPCGW99B986DC",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": {
          "Ref": "VPCingressSubnet2RouteTable8565F2D0",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCingressSubnet2RouteTable8565F2D0": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestAppStack/VPC/ingressSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCingressSubnet2RouteTableAssociation35C35494": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCingressSubnet2RouteTable8565F2D0",
        },
        "SubnetId": {
          "Ref": "VPCingressSubnet2SubnetE30F0091",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCingressSubnet2SubnetE30F0091": {
      "Properties": {
        "AvailabilityZone": "eu-north-1b",
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "ingress",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "TestAppStack/VPC/ingressSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
